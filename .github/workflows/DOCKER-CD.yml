name: DOCKER-CD
on:
  push:
    branches: [ "develop" ]

jobs:
  ci:
    runs-on: ubuntu-22.04
    env:
      working-directory: .

    steps:
      - name: 체크아웃
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: application-secret.yml 생성
        run: |
          cd ./src/main/resources
          touch ./application-secret.yml
          echo "${{ secrets.CD_APPLICATION_SECRET}}" > ./application-secret.yml
          cat ./application-secret.yml
          cat ./application-dev.yml
        working-directory: ${{ env.working-directory }}

      - name: 빌드
        run: |
          chmod +x gradlew
          ./gradlew build -x test
        working-directory: ${{ env.working-directory }}
        shell: bash


      - name: docker build 환경 설정
        uses: docker/setup-buildx-action@v2.9.1

      - name: docker hub 로그인
        uses: docker/login-action@v2.2.0
        with:
          username: ${{ secrets.DOCKER_LOGIN_USERNAME }}
          password: ${{ secrets.DOCKER_LOGIN_ACCESSTOKEN }}

      - name: docker image 빌드 및 푸시
        uses: docker/build-push-action@v4
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        with:
          context: .
          file: ./Dockerfile-Dev
          push: true
          tags: ${{ secrets.DOCKER_LOGIN_USERNAME }}/dev

  cd:
    needs: ci
    runs-on: ubuntu-22.04

    steps:
      - name: docker 컨테이너 실행
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_KEY }}
          script: |
            cd ~
            ./deploy.sh
